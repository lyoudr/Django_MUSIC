FROM python:3.7.5
# Setting "PYTONUNBUFFERED" to a non empty value ensures that the python ouput is sent straight to terminal (e.g. your container log) without being first buffered and that you can see the output of your application (e.g. django logs) in real time.
ENV PYTHONUNBUFFERED 1
ENV XDG_RUNTIME_DIR=/tmp/runtime-root


ARG ENV
ARG STATIC_ROOT
ARG MEDIA_ROOT
ARG DB_NAME
ARG DB_USER
ARG DB_PASSWORD
ARG DB_HOST
# ARG AWS_ACCESS_KEY_ID
# ARG AWS_SECRET_ACCESS_KEY
ARG AWS_STORAGE_BUCKET_NAME

ENV ENV=$ENV
ENV STATIC_ROOT=$STATIC_ROOT
ENV MEDIA_ROOT=$MEDIA_ROOT
ENV DB_NAME=$DB_NAME
ENV DB_USER=$DB_USER
ENV DB_PASSWORD=$DB_PASSWORD
ENV DB_HOST=$DB_HOST
# ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
# ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME


RUN echo $ENV
RUN echo $STATIC_ROOT

WORKDIR /music
COPY . /music/
RUN mkdir -p ~/.docker
RUN mkdir -p /tmp/media
COPY ./music_storage/ /tmp/media/

# Docker login token is stored in config.json, so copy config.json to the folder where docker damean find its token.
COPY ./docker_config/config.json ~/.docker/config.json 
COPY ./docker/uwsgi/uwsgi.ini /music/uwsgi.ini
COPY ./docker/config/entrypoint.sh /music/entrypoint.sh

RUN pip install -r requirements.txt \
    && pip install uwsgi \
    && pip install pyyaml

RUN python manage.py collectstatic --noinput
RUN ["chmod", "+x", "/music/entrypoint.sh"]
EXPOSE 5000

ENTRYPOINT [ "/music/entrypoint.sh" ]