# If there are volumes to correspond, have to use EBS
version : '3'

services :
  postgres_db :
    image : postgres:12.5
    environment: 
      - POSTGRES_DB=music
      - POSTGRES_USER=ann
      - POSTGRES_PASSWORD=GxXynskDj134yi7P
      - POSTGRES_HOST_AUTH_METHOD=trust

    healthcheck :
      test : ["CMD-SHELL", "pg_isready --dbname music -U ann"]
      timeout : 30s
      retries : 3

  ann_server_1:

    # build:
    #   context: .
    #   dockerfile: Dockerfile.server
    #   args:
    #     - ENV=dev
    #     - STATIC_ROOT=/music/static-root
    #     - MEDIA_ROOT=/tmp/media
    #     - DB_HOST=localhost # have to use "localhost" to refer to host when "ecs_network_mode" is "awsvpc" 
    #     - DB_NAME=music
    #     - DB_USER=ann
    #     - DB_PASSWORD=GxXynskDj134yi7P
    #     - AWS_ACCESS_KEY_ID=AKIAXSGGC3XSHHXH6JM5
    #     - AWS_SECRET_ACCESS_KEY=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
    #     - AWS_STORAGE_BUCKET_NAME=lyoudrmusic

    image : lyoudr/music_public:music_1

    # have to write "healthcheck" 
    healthcheck :
      test : ["CMD-SHELL", "uwsgi_curl -X GET localhost:5000 /api/blog/class"]
      timeout : 60s
      retries : 10
      
    logging:
        driver: awslogs
        options: 
          awslogs-group: tutorial
          awslogs-region: ap-northeast-1
          awslogs-stream-prefix: ann_server_1
    

    volumes:
      - music:/music/static-root
      - media:/tmp/media

  nginx :

    # build:
    #   context: .
    #   dockerfile: Dockerfile.nginx

    image : lyoudr/nginx_public:latest

    healthcheck :
      test : ["CMD-SHELL", "nginx", "-t"]
      timeout : 60s
      retries : 10
    
    ports: 
      - 80:80
      - 443:443
    
    volumes:
      - music:/tmp/static-root
      - media:/usr/media
      

    logging:
      driver: awslogs
      options: 
        awslogs-group: tutorial
        awslogs-region: ap-northeast-1
        awslogs-stream-prefix: nginx

volumes:
  music:
  media: