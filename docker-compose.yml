version : '3'

services :
  # 2. database
  postgres_db :
    image : postgres:12.5
    environment: 
      - POSTGRES_DB=music
      - POSTGRES_USER=ann
      - POSTGRES_PASSWORD=GxXynskDj134yi7P
    volumes:
      - ./postgres_data:/var/lib/postgresql

    # healthcheck:
    #   test : ["CMD", "pg_isready", "--dbname", "music", "--host", "postgres_db", "-U", "ann"]
    #   timeout: 5sd
    #   retries : 5

  # 3. server 
  # server_1
  ann_server_1:
    # build :
    #   context : .
    #   dockerfile: ./docker/config/Dockerfile
    image : lyoudr/music_public:latest
    logging :
      driver : awslogs
      options : 
        awslogs-group : music
        awslogs-region : ap-northeast-1
        awslogs-stream-prefix : ann_server_1
    environment:
      # system
      - ENV=prod 
      - STATIC_ROOT=/music/static/
      # database
      - DB_HOST=postgres_db
      - DB_NAME=music
      - DB_USER=ann
      - DB_PASSWORD=GxXynskDj134yi7P
      # aws_s3
      - AWS_ACCESS_KEY_ID=AKIAXSGGC3XSBLLMV4JY
      - AWS_SECRET_ACCESS_KEY=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
      - AWS_STORAGE_BUCKET_NAME=lyoudrmusic
    depends_on:
      - postgres_db
    restart : always
    volumes : 
      - static-content:/music/static
      - media-content:/tmp/media

  # 1. web server
  nginx :
    # Image
    image : lyoudr/nginx_public:latest
    logging :
      driver : awslogs
      options : 
        awslogs-group : music
        awslogs-region : ap-northeast-1
        awslogs-stream-prefix : ann_server_1
    # For build locally
    # build :
    #   context : .
    #   dockerfile : ./docker/nginx/Dockerfile
    volumes:
      - static-content:/tmp/static
      - media-content:/tmp/media
    links :
      - ann_server_1
    # depends_on:
    #   - ann_server_1
      # - ann_server_2
      # - ann_server_3
    ports: 
      - 80:80
      - 443:443

volumes:
  media-content : 
  static-content :


  